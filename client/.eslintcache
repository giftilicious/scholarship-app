[{"D:\\UofT-Coding-Bootcamp\\WORKING\\23-Project-3\\02-Homework\\scholarship-app\\client\\src\\index.js":"1","D:\\UofT-Coding-Bootcamp\\WORKING\\23-Project-3\\02-Homework\\scholarship-app\\client\\src\\reportWebVitals.js":"2","D:\\UofT-Coding-Bootcamp\\WORKING\\23-Project-3\\02-Homework\\scholarship-app\\client\\src\\App.js":"3","D:\\UofT-Coding-Bootcamp\\WORKING\\23-Project-3\\02-Homework\\scholarship-app\\client\\src\\pages\\Signup.js":"4","D:\\UofT-Coding-Bootcamp\\WORKING\\23-Project-3\\02-Homework\\scholarship-app\\client\\src\\pages\\Login.js":"5","D:\\UofT-Coding-Bootcamp\\WORKING\\23-Project-3\\02-Homework\\scholarship-app\\client\\src\\pages\\Home.js":"6","D:\\UofT-Coding-Bootcamp\\WORKING\\23-Project-3\\02-Homework\\scholarship-app\\client\\src\\components\\Footer\\index.js":"7","D:\\UofT-Coding-Bootcamp\\WORKING\\23-Project-3\\02-Homework\\scholarship-app\\client\\src\\components\\Header\\index.js":"8","D:\\UofT-Coding-Bootcamp\\WORKING\\23-Project-3\\02-Homework\\scholarship-app\\client\\src\\utils\\mutations.js":"9","D:\\UofT-Coding-Bootcamp\\WORKING\\23-Project-3\\02-Homework\\scholarship-app\\client\\src\\utils\\auth.js":"10","D:\\UofT-Coding-Bootcamp\\WORKING\\23-Project-3\\02-Homework\\scholarship-app\\client\\src\\components\\SearchResults\\index.js":"11","D:\\UofT-Coding-Bootcamp\\WORKING\\23-Project-3\\02-Homework\\scholarship-app\\client\\src\\components\\ScholarshipList\\index.js":"12","D:\\UofT-Coding-Bootcamp\\WORKING\\23-Project-3\\02-Homework\\scholarship-app\\client\\src\\components\\Navbar\\index.js":"13","D:\\UofT-Coding-Bootcamp\\WORKING\\23-Project-3\\02-Homework\\scholarship-app\\client\\src\\utils\\queries.js":"14","D:\\UofT-Coding-Bootcamp\\WORKING\\23-Project-3\\02-Homework\\scholarship-app\\client\\src\\components\\ScholarshipCard\\index.js":"15"},{"size":500,"mtime":1637683053583,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1637683053587,"results":"18","hashOfConfig":"17"},{"size":2722,"mtime":1638028730845,"results":"19","hashOfConfig":"17"},{"size":2684,"mtime":1637789171537,"results":"20","hashOfConfig":"17"},{"size":2503,"mtime":1637683053585,"results":"21","hashOfConfig":"17"},{"size":3749,"mtime":1638027873056,"results":"22","hashOfConfig":"17"},{"size":844,"mtime":1637872481732,"results":"23","hashOfConfig":"17"},{"size":411,"mtime":1637872481730,"results":"24","hashOfConfig":"17"},{"size":2712,"mtime":1638016067759,"results":"25","hashOfConfig":"17"},{"size":1040,"mtime":1637940450056,"results":"26","hashOfConfig":"17"},{"size":7663,"mtime":1638028843624,"results":"27","hashOfConfig":"17"},{"size":406,"mtime":1637951885772,"results":"28","hashOfConfig":"17"},{"size":848,"mtime":1637872481729,"results":"29","hashOfConfig":"17"},{"size":2145,"mtime":1638016067760,"results":"30","hashOfConfig":"17"},{"size":1992,"mtime":1638029085196,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1t9qaaa",{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\UofT-Coding-Bootcamp\\WORKING\\23-Project-3\\02-Homework\\scholarship-app\\client\\src\\index.js",[],["66","67"],"D:\\UofT-Coding-Bootcamp\\WORKING\\23-Project-3\\02-Homework\\scholarship-app\\client\\src\\reportWebVitals.js",[],"D:\\UofT-Coding-Bootcamp\\WORKING\\23-Project-3\\02-Homework\\scholarship-app\\client\\src\\App.js",["68"],"import React from 'react';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Home from './pages/Home';\nimport Signup from './pages/Signup';\nimport Login from './pages/Login';\n// import Library from './pages/Library';\n// import Collection from './pages/Collection';\n// import ProvideScholarship from './pages/ProvideScholarship';\nimport Footer from './components/Footer';\n// import Apply from './pages/Apply';\nimport Header from './components/Header';\n \n// Construct our main GraphQL API endpoint\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('id_token');\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"flex-column justify-flex-start min-100-vh\">\n          <Header />\n          <div className=\"container\">\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route exact path=\"/login\">\n              <Login />\n            </Route>\n            <Route exact path=\"/signup\">\n              <Signup />\n            </Route>\n            {/* TODO Library page to be added */}\n            {/* <Route exact path=\"/library\">\n              <Library />\n            </Route> */}\n            {/* TODO scholarshipForm page to be added */}\n            {/* <Route exact path=\"/provideScholarship\">\n              <ProvideScholarship />\n            </Route>  */}\n            {/* <Route exact path=\"/collection\">\n              <Collection />\n            </Route>\n            {/* TODO search page to be added */}\n            {/* TODO apply page to be added */}\n            {/* <Route exact path=\"/apply\">\n              <Apply />\n            </Route> */}\n            {/* <Route exact path=\"/library\">\n              <Library />\n            </Route>                      */}\n          </div>\n          <Footer />\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\n\nexport default App;\n","D:\\UofT-Coding-Bootcamp\\WORKING\\23-Project-3\\02-Homework\\scholarship-app\\client\\src\\pages\\Signup.js",[],"D:\\UofT-Coding-Bootcamp\\WORKING\\23-Project-3\\02-Homework\\scholarship-app\\client\\src\\pages\\Login.js",[],"D:\\UofT-Coding-Bootcamp\\WORKING\\23-Project-3\\02-Homework\\scholarship-app\\client\\src\\pages\\Home.js",["69"],"import React from 'react';\nimport {useQuery} from '@apollo/client';\nimport SearchResults from '../components/SearchResults';\nimport ScholarshipList from '../components/ScholarshipList';\nimport Auth from '../utils/auth';\n// import {QUERY_SCHOLARSHIPS} from '../utils/queries'\n\n\nconst Home = () => {\n\n  // const { loading, data } = useQuery(QUERY_SCHOLARSHIPS);\n  // const scholarships = data?.allScholarships || [];\n  const scholarships = [];\n  const loading  = null;\n\n  \n  const pScholarships = [];\n  scholarships.forEach(element => {\n    console.log(element);\n\n      const newScholarship = {title:element.title, \n        type: element.type,\n        description:element.description, \n        deadline: element.deadline,\n        amount: element.amount,\n        ethnicity: '',\n        gender: '',\n        levelofstudy: '',\n        disabled: '',\n        applink: element.applink,\n        appemail: element.appemail,\n      }\n      if (newScholarship.deadline===undefined || !newScholarship.deadline || newScholarship.deadline.length===0){\n        newScholarship.deadline='None';\n      }\n      if (newScholarship.applink===undefined || !newScholarship.applink ||newScholarship.applink.length===0){\n        newScholarship.applink='Not provided';\n      }\n      if (newScholarship.appemail===undefined || !newScholarship.appemail ||newScholarship.appemail.length===0){\n        newScholarship.appemail='Not provided';\n      }\n      if (element.ethnicity===undefined || element.ethnicity.length===0){\n        newScholarship.ethnicity='Any';\n      } else {\n        element.ethnicity.forEach(eth => {\n          if (newScholarship.ethnicity.length>0){\n            newScholarship.ethnicity = newScholarship.ethnicity + ', ';\n          }\n          newScholarship.ethnicity = newScholarship.ethnicity + eth;\n        });\n      }\n  \n      if (element.gender===undefined || element.gender.length===0){\n        newScholarship.gender='Any';\n      } else {\n        element.gender.forEach(eth => {\n          if (newScholarship.gender.length>0){\n            newScholarship.gender = newScholarship.gender + ', ';\n          }\n          newScholarship.gender = newScholarship.gender + eth;\n        });\n      }\n  \n      if (element.levelofstudy===undefined || element.levelofstudy.length===0){\n        newScholarship.levelofstudy='Any';\n      } else {\n        element.levelofstudy.forEach(eth => {\n          if (newScholarship.levelofstudy.length>0){\n            newScholarship.levelofstudy = newScholarship.levelofstudy + ', ';\n          }\n          newScholarship.levelofstudy = newScholarship.levelofstudy + eth;\n        });\n      }\n  \n      if (element.disabled===undefined || element.disabled.length===0){\n        newScholarship.disabled='Any';\n      } else {\n        element.disabled.forEach(eth => {\n          if (newScholarship.disabled.length>0){\n            newScholarship.disabled = newScholarship.disabled + ', ';\n          }\n          newScholarship.disabled = newScholarship.disabled + eth;\n        });\n      }\n  \n      pScholarships.push(newScholarship);\n    \n    \n  });\n\n  if(loading){\n    return (\n      <div>\n        <h1>Loading ...</h1>\n      </div>\n    )\n  }\n  return (\n    <main>\n      <div className=\"flex-row justify-center\">\n        <div\n          className=\"col-12 col-md-10 mb-3 p-3\"\n          style={{ border: '1px dotted #1a1a1a' }}\n        >\n          {Auth.loggedIn ? (\n            <div>\n              <SearchResults/>         \n            </div>\n          ) : (\n              <div>\n              <ScholarshipList\n              scholarships={pScholarships}\n              title=\"Some Feed for Scholarships...\"\n            />\n              </div>\n          )}\n          \n        </div>        \n      </div>\n    </main>\n  );\n};\n\nexport default Home;\n","D:\\UofT-Coding-Bootcamp\\WORKING\\23-Project-3\\02-Homework\\scholarship-app\\client\\src\\components\\Footer\\index.js",[],"D:\\UofT-Coding-Bootcamp\\WORKING\\23-Project-3\\02-Homework\\scholarship-app\\client\\src\\components\\Header\\index.js",[],"D:\\UofT-Coding-Bootcamp\\WORKING\\23-Project-3\\02-Homework\\scholarship-app\\client\\src\\utils\\mutations.js",[],"D:\\UofT-Coding-Bootcamp\\WORKING\\23-Project-3\\02-Homework\\scholarship-app\\client\\src\\utils\\auth.js",[],"D:\\UofT-Coding-Bootcamp\\WORKING\\23-Project-3\\02-Homework\\scholarship-app\\client\\src\\components\\SearchResults\\index.js",["70","71","72","73","74","75","76","77"],"import React from 'react';\nimport { useState } from 'react';\nimport { useQuery } from '@apollo/client';\nimport ScholarshipCard from '../ScholarshipCard';\nimport { QUERY_SCHOLARSHIPS } from '../../utils/queries';\nconst filter = [];\n\nconst filterScholarship = (element, filter) => {\n  if (!(element.ethnicity === undefined || element.ethnicity.length === 0) && (filter.ethnicity && filter.ethnicity.length > 0)) {\n    let found = false;\n    element.ethnicity.forEach(ele => {\n      if (ele === filter.ethnicity) {\n        found = true;\n      }\n    });\n    if (!found) {\n      return true;\n    }\n  }\n  if (!(element.gender === undefined || element.gender.length === 0) && (filter.gender && filter.gender.length > 0)) {\n    let found = false;\n    element.gender.forEach(ele => {\n      if (ele === filter.gender) {\n        found = true;\n      }\n    });\n    if (!found) {\n      return true;\n    }\n  }\n  if (!(element.disability === undefined || element.disability.length === 0) && (filter.disability && filter.disability.length > 0)) {\n    let found = false;\n    element.disability.forEach(ele => {\n      if (ele === filter.disability) {\n        found = true;\n      }\n    });\n    if (!found) {\n      return true;\n    }\n  }\n  if (!(element.levelofstudy === undefined || element.levelofstudy.length === 0) && (filter.levelofstudy && filter.levelofstudy.length > 0)) {\n    let found = false;\n    element.levelofstudy.forEach(ele => {\n      if (ele === filter.levelofstudy) {\n        found = true;\n      }\n    });\n    if (!found) {\n      return true;\n    }\n  }\n  if (!(element.type === undefined || element.type.length === 0) && (filter.type && filter.type.length > 0)) {\n    if (!(element.type != filter.type)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nconst SearchResults = () => {\n  // Arrays for storing filter options\n  const ethnicities = [\"\", \"Black\", \"Indigeneous\", \"Asian\"];\n  const disabilities = [\"\", \"Physical\", \"Intellectual\", \"Learning Difference\"];\n  const genders = [\"\", \"Female\", \"Male\", \"Gender Diverse\"];\n  const levels = [\"\", \"High School\", \"Post-Secondary\"];\n  const types = [\"\", \"Bursary\", \"Scholarship\"];\n\n  // Tracking states of each filter\n  const [ethnicity, setEthnicity] = useState('');\n  const [disability, setDisability] = useState('');\n  const [gender, setGender] = useState('');\n  const [level, setLevel] = useState('');\n  const [type, setType] = useState('');\n\n  // Handler for all states\n  const handleSelect = (e) => {\n    const selected = e.target.value;\n    switch (e.target.name) {\n      case \"ethnicities\":\n        setEthnicity(selected);\n      case \"disabilities\":\n        setDisability(selected);\n      case \"genders\":\n        setGender(selected);\n      case \"levels-of-study\":\n        setLevel(selected);\n      case \"types\":\n        setType(selected);\n    }\n\n  }\n  // Object with all selected filters\n  const selection = {\n    ethinicity: ethnicity,\n    disability: disability,\n    gender: gender,\n    level: level,\n    type: type\n  }\n\n  const { loading, data } = useQuery(QUERY_SCHOLARSHIPS);\n  const scholarships = data?.allScholarships || [];\n \n  const [pScholarships, setpScholarships] = useState([]);\n  \n  const updateList = () =>{\n  scholarships.forEach(element => {\n    if (filterScholarship(element, filter)) {\n      //console.log(\"Filtered\");\n    } else {\n      //console.log(\"Not filtered\");\n      const newScholarship = {\n        title: element.title,\n        type: element.type,\n        description: element.description,\n        deadline: element.deadline,\n        amount: element.amount,\n        ethnicity: '',\n        gender: '',\n        levelofstudy: '',\n        disability: '',\n        applink: element.applink,\n        appemail: element.appemail,\n      }\n      if (newScholarship.deadline === undefined || !newScholarship.deadline || newScholarship.deadline.length === 0) {\n        newScholarship.deadline = 'None';\n      }\n      if (newScholarship.applink === undefined || !newScholarship.applink || newScholarship.applink.length === 0) {\n        newScholarship.applink = 'Not provided';\n      }\n      if (newScholarship.appemail === undefined || !newScholarship.appemail || newScholarship.appemail.length === 0) {\n        newScholarship.appemail = 'Not provided';\n      }\n      if (element.ethnicity === undefined || element.ethnicity.length === 0) {\n        newScholarship.ethnicity = 'Any';\n      } else {\n        element.ethnicity.forEach(eth => {\n          if (newScholarship.ethnicity.length > 0) {\n            newScholarship.ethnicity = newScholarship.ethnicity + ', ';\n          }\n          newScholarship.ethnicity = newScholarship.ethnicity + eth;\n        });\n      }\n\n      if (element.gender === undefined || element.gender.length === 0) {\n        newScholarship.gender = 'Any';\n      } else {\n        element.gender.forEach(eth => {\n          if (newScholarship.gender.length > 0) {\n            newScholarship.gender = newScholarship.gender + ', ';\n          }\n          newScholarship.gender = newScholarship.gender + eth;\n        });\n      }\n\n      if (element.levelofstudy === undefined || element.levelofstudy.length === 0) {\n        newScholarship.levelofstudy = 'Any';\n      } else {\n        element.levelofstudy.forEach(eth => {\n          if (newScholarship.levelofstudy.length > 0) {\n            newScholarship.levelofstudy = newScholarship.levelofstudy + ', ';\n          }\n          newScholarship.levelofstudy = newScholarship.levelofstudy + eth;\n        });\n      }\n\n      if (element.disability === undefined || element.disability.length === 0) {\n        newScholarship.disability = 'Any';\n      } else {\n        element.disability.forEach(eth => {\n          if (newScholarship.disability.length > 0) {\n            newScholarship.disability = newScholarship.disability + ', ';\n          }\n          newScholarship.disability = newScholarship.disability + eth;\n        });\n      }\n\n      // pScholarships.push(newScholarship);\n      setpScholarships([...pScholarships, newScholarship]);\n    }\n\n  });\n  }\n\n  \n  return (\n    <div>\n      {/* Form to render the filters */}\n      <form action=\"\">\n        {/* ethnicities */}\n        <select className=\"filters\" name=\"ethnicities\" id=\"ethnicities\" onChange={handleSelect} >\n          {ethnicities.map((ethnicity) => (\n            <option value={ethnicity}>{ethnicity}</option>\n          ))}\n        </select>\n        {/* disabilities */}\n        <select className=\"filters\" name=\"disabilities\" id=\"disabilities\" onChange={handleSelect}>\n          {disabilities.map((disability) => (\n            <option value={disability}>{disability}</option>\n          ))}\n        </select>\n        {/* levels of study */}\n        <select className=\"filters\" name=\"levels-of-study\" id=\"levels\" onChange={handleSelect}>\n          {levels.map((level) => (\n            <option value={level}>{level}</option>\n          ))}\n        </select>\n        {/* genders */}\n        <select className=\"filters\" name=\"genders\" id=\"genders\" onChange={handleSelect}>\n          {genders.map((gender) => (\n            <option value={gender}>{gender}</option>\n          ))}\n        </select>\n        {/* types of funding */}\n        <select className=\"filters\" name=\"types\" id=\"types\" onChange={handleSelect}>\n          {types.map((type) => (\n            <option value={type}>{type}</option>\n          ))}\n        </select>\n        <button type=\"button\" className=\"btn btn-primary\" onClick={updateList}>Submit</button>\n      </form>\n      {/* render results of (filtered) search */}\n      <div>\n        {pScholarships.map((scholarship) => (\n          <ScholarshipCard scholarship={scholarship} />\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default SearchResults;\n","D:\\UofT-Coding-Bootcamp\\WORKING\\23-Project-3\\02-Homework\\scholarship-app\\client\\src\\components\\ScholarshipList\\index.js",[],"D:\\UofT-Coding-Bootcamp\\WORKING\\23-Project-3\\02-Homework\\scholarship-app\\client\\src\\components\\Navbar\\index.js",[],"D:\\UofT-Coding-Bootcamp\\WORKING\\23-Project-3\\02-Homework\\scholarship-app\\client\\src\\utils\\queries.js",[],"D:\\UofT-Coding-Bootcamp\\WORKING\\23-Project-3\\02-Homework\\scholarship-app\\client\\src\\components\\ScholarshipCard\\index.js",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":9,"column":42,"nodeType":"84","messageId":"85","endLine":9,"endColumn":48},{"ruleId":"82","severity":1,"message":"86","line":2,"column":9,"nodeType":"84","messageId":"85","endLine":2,"endColumn":17},{"ruleId":"87","severity":1,"message":"88","line":54,"column":24,"nodeType":"89","messageId":"90","endLine":54,"endColumn":26},{"ruleId":"91","severity":1,"message":"92","line":80,"column":5,"nodeType":"93","messageId":"94","endLine":91,"endColumn":6},{"ruleId":"95","severity":1,"message":"96","line":83,"column":7,"nodeType":"97","messageId":"98","endLine":84,"endColumn":33},{"ruleId":"95","severity":1,"message":"96","line":85,"column":7,"nodeType":"97","messageId":"98","endLine":86,"endColumn":29},{"ruleId":"95","severity":1,"message":"96","line":87,"column":7,"nodeType":"97","messageId":"98","endLine":88,"endColumn":28},{"ruleId":"95","severity":1,"message":"96","line":89,"column":7,"nodeType":"97","messageId":"98","endLine":90,"endColumn":27},{"ruleId":"82","severity":1,"message":"99","line":95,"column":9,"nodeType":"84","messageId":"85","endLine":95,"endColumn":18},{"ruleId":"82","severity":1,"message":"100","line":103,"column":11,"nodeType":"84","messageId":"85","endLine":103,"endColumn":18},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'useQuery' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","'selection' is assigned a value but never used.","'loading' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]